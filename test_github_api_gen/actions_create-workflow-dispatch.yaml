name: Create a workflow dispatch event
description: |-
  You can use this endpoint to manually trigger a GitHub Actions workflow run. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.

  You must configure your GitHub Actions workflow to run when the [`workflow_dispatch` webhook](/developers/webhooks-and-events/webhook-events-and-payloads#workflow_dispatch) event occurs. The `inputs` are configured in the workflow file. For more information about how to configure the `workflow_dispatch` event in the workflow file, see "[Events that trigger workflows](/actions/reference/events-that-trigger-workflows#workflow_dispatch)."

  OAuth tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
env: null
vars: null
setup: null
tests:
- name: Create a workflow dispatch event
  description: |-
    You can use this endpoint to manually trigger a GitHub Actions workflow run. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.

    You must configure your GitHub Actions workflow to run when the [`workflow_dispatch` webhook](/developers/webhooks-and-events/webhook-events-and-payloads#workflow_dispatch) event occurs. The `inputs` are configured in the workflow file. For more information about how to configure the `workflow_dispatch` event in the workflow file, see "[Events that trigger workflows](/actions/reference/events-that-trigger-workflows#workflow_dispatch)."

    OAuth tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
  request:
    method: POST
    url: https://api.github.com/repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches
    headers: null
    params: null
    body: |-
      {
        "inputs": {},
        "ref": "example"
      }
  expect:
    status: 204
    schema: null
    jsonpath: null
    headers: null
dataset: null
teardown: null
