name: Search topics
description: |-
  Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api). See "[Searching topics](https://docs.github.com/articles/searching-topics/)" for a detailed list of qualifiers.

  When searching for topics, you can get text match metadata for the topic's **short\_description**, **description**, **name**, or **display\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).

  For example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:

  `q=ruby+is:featured`

  This query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.
env: null
vars: null
setup: null
tests:
- name: Search topics
  description: |-
    Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api). See "[Searching topics](https://docs.github.com/articles/searching-topics/)" for a detailed list of qualifiers.

    When searching for topics, you can get text match metadata for the topic's **short\_description**, **description**, **name**, or **display\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).

    For example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:

    `q=ruby+is:featured`

    This query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.
  request:
    method: GET
    url: https://api.github.com/search/topics
    headers: null
    params:
      q: '{{queryValue}}'
    body: null
  expect:
    status: 200
    schema: null
    jsonpath: null
    headers: null
dataset: null
teardown: null
