name: Create a repository dispatch event
description: |-
  You can use this endpoint to trigger a webhook event called `repository_dispatch` when you want activity that happens outside of GitHub to trigger a GitHub Actions workflow or GitHub App webhook. You must configure your GitHub Actions workflow or GitHub App to run when the `repository_dispatch` event occurs. For an example `repository_dispatch` webhook payload, see "[RepositoryDispatchEvent](https://docs.github.com/webhooks/event-payloads/#repository_dispatch)."

  The `client_payload` parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the `client_payload` can include a message that a user would like to send using a GitHub Actions workflow. Or the `client_payload` can be used as a test to debug your workflow.

  This input example shows how you can use the `client_payload` as a test to debug your workflow.

  OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
env: null
vars: null
setup: null
tests:
- name: Create a repository dispatch event
  description: |-
    You can use this endpoint to trigger a webhook event called `repository_dispatch` when you want activity that happens outside of GitHub to trigger a GitHub Actions workflow or GitHub App webhook. You must configure your GitHub Actions workflow or GitHub App to run when the `repository_dispatch` event occurs. For an example `repository_dispatch` webhook payload, see "[RepositoryDispatchEvent](https://docs.github.com/webhooks/event-payloads/#repository_dispatch)."

    The `client_payload` parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the `client_payload` can include a message that a user would like to send using a GitHub Actions workflow. Or the `client_payload` can be used as a test to debug your workflow.

    This input example shows how you can use the `client_payload` as a test to debug your workflow.

    OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
  request:
    method: POST
    url: https://api.github.com/repos/{owner}/{repo}/dispatches
    headers: null
    params: null
    body: |-
      {
        "client_payload": {},
        "event_type": "example"
      }
  expect:
    status: 204
    schema: null
    jsonpath: null
    headers: null
dataset: null
teardown: null
